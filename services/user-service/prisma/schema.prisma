generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  username    String   @unique
  password    String
  displayName String?
  bio         String?
  avatar      String?
  isVerified  Boolean  @default(false)
  isPro       Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  profile      ArtistProfile?
  sessions     Session[]
  refreshTokens RefreshToken[]
}

model ArtistProfile {
  id               String   @id @default(uuid())
  userId           String   @unique
  stageName        String
  genres           String[]
  location         String?
  website          String?
  socialLinks      Json?
  monthlyListeners Int      @default(0)
  totalStreams     BigInt   @default(0)
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Session {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}

model RefreshToken {
  id        String   @id @default(uuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  createdAt DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@index([token])
}